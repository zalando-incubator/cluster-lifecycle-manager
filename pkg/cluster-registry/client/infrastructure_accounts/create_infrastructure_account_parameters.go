// Code generated by go-swagger; DO NOT EDIT.

package infrastructure_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/zalando-incubator/cluster-lifecycle-manager/pkg/cluster-registry/models"
)

// NewCreateInfrastructureAccountParams creates a new CreateInfrastructureAccountParams object
// with the default values initialized.
func NewCreateInfrastructureAccountParams() *CreateInfrastructureAccountParams {
	var ()
	return &CreateInfrastructureAccountParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateInfrastructureAccountParamsWithTimeout creates a new CreateInfrastructureAccountParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateInfrastructureAccountParamsWithTimeout(timeout time.Duration) *CreateInfrastructureAccountParams {
	var ()
	return &CreateInfrastructureAccountParams{

		timeout: timeout,
	}
}

// NewCreateInfrastructureAccountParamsWithContext creates a new CreateInfrastructureAccountParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateInfrastructureAccountParamsWithContext(ctx context.Context) *CreateInfrastructureAccountParams {
	var ()
	return &CreateInfrastructureAccountParams{

		Context: ctx,
	}
}

// NewCreateInfrastructureAccountParamsWithHTTPClient creates a new CreateInfrastructureAccountParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateInfrastructureAccountParamsWithHTTPClient(client *http.Client) *CreateInfrastructureAccountParams {
	var ()
	return &CreateInfrastructureAccountParams{
		HTTPClient: client,
	}
}

/*CreateInfrastructureAccountParams contains all the parameters to send to the API endpoint
for the create infrastructure account operation typically these are written to a http.Request
*/
type CreateInfrastructureAccountParams struct {

	/*InfrastructureAccount
	  Account that will be created.

	*/
	InfrastructureAccount *models.InfrastructureAccount

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create infrastructure account params
func (o *CreateInfrastructureAccountParams) WithTimeout(timeout time.Duration) *CreateInfrastructureAccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create infrastructure account params
func (o *CreateInfrastructureAccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create infrastructure account params
func (o *CreateInfrastructureAccountParams) WithContext(ctx context.Context) *CreateInfrastructureAccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create infrastructure account params
func (o *CreateInfrastructureAccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create infrastructure account params
func (o *CreateInfrastructureAccountParams) WithHTTPClient(client *http.Client) *CreateInfrastructureAccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create infrastructure account params
func (o *CreateInfrastructureAccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInfrastructureAccount adds the infrastructureAccount to the create infrastructure account params
func (o *CreateInfrastructureAccountParams) WithInfrastructureAccount(infrastructureAccount *models.InfrastructureAccount) *CreateInfrastructureAccountParams {
	o.SetInfrastructureAccount(infrastructureAccount)
	return o
}

// SetInfrastructureAccount adds the infrastructureAccount to the create infrastructure account params
func (o *CreateInfrastructureAccountParams) SetInfrastructureAccount(infrastructureAccount *models.InfrastructureAccount) {
	o.InfrastructureAccount = infrastructureAccount
}

// WriteToRequest writes these params to a swagger request
func (o *CreateInfrastructureAccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.InfrastructureAccount != nil {
		if err := r.SetBodyParam(o.InfrastructureAccount); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
