// Code generated by go-swagger; DO NOT EDIT.

package node_pool_config_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zalando-incubator/cluster-lifecycle-manager/pkg/cluster-registry/models"
)

// AddOrUpdateNodePoolConfigItemReader is a Reader for the AddOrUpdateNodePoolConfigItem structure.
type AddOrUpdateNodePoolConfigItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddOrUpdateNodePoolConfigItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddOrUpdateNodePoolConfigItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddOrUpdateNodePoolConfigItemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddOrUpdateNodePoolConfigItemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddOrUpdateNodePoolConfigItemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddOrUpdateNodePoolConfigItemInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}] addOrUpdateNodePoolConfigItem", response, response.Code())
	}
}

// NewAddOrUpdateNodePoolConfigItemOK creates a AddOrUpdateNodePoolConfigItemOK with default headers values
func NewAddOrUpdateNodePoolConfigItemOK() *AddOrUpdateNodePoolConfigItemOK {
	return &AddOrUpdateNodePoolConfigItemOK{}
}

/*
AddOrUpdateNodePoolConfigItemOK describes a response with status code 200, with default header values.

The config items add/update request is accepted.
*/
type AddOrUpdateNodePoolConfigItemOK struct {
	Payload *models.ConfigValue
}

// IsSuccess returns true when this add or update node pool config item o k response has a 2xx status code
func (o *AddOrUpdateNodePoolConfigItemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add or update node pool config item o k response has a 3xx status code
func (o *AddOrUpdateNodePoolConfigItemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add or update node pool config item o k response has a 4xx status code
func (o *AddOrUpdateNodePoolConfigItemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add or update node pool config item o k response has a 5xx status code
func (o *AddOrUpdateNodePoolConfigItemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add or update node pool config item o k response a status code equal to that given
func (o *AddOrUpdateNodePoolConfigItemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add or update node pool config item o k response
func (o *AddOrUpdateNodePoolConfigItemOK) Code() int {
	return 200
}

func (o *AddOrUpdateNodePoolConfigItemOK) Error() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemOK  %+v", 200, o.Payload)
}

func (o *AddOrUpdateNodePoolConfigItemOK) String() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemOK  %+v", 200, o.Payload)
}

func (o *AddOrUpdateNodePoolConfigItemOK) GetPayload() *models.ConfigValue {
	return o.Payload
}

func (o *AddOrUpdateNodePoolConfigItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigValue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOrUpdateNodePoolConfigItemBadRequest creates a AddOrUpdateNodePoolConfigItemBadRequest with default headers values
func NewAddOrUpdateNodePoolConfigItemBadRequest() *AddOrUpdateNodePoolConfigItemBadRequest {
	return &AddOrUpdateNodePoolConfigItemBadRequest{}
}

/*
AddOrUpdateNodePoolConfigItemBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type AddOrUpdateNodePoolConfigItemBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add or update node pool config item bad request response has a 2xx status code
func (o *AddOrUpdateNodePoolConfigItemBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add or update node pool config item bad request response has a 3xx status code
func (o *AddOrUpdateNodePoolConfigItemBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add or update node pool config item bad request response has a 4xx status code
func (o *AddOrUpdateNodePoolConfigItemBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add or update node pool config item bad request response has a 5xx status code
func (o *AddOrUpdateNodePoolConfigItemBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add or update node pool config item bad request response a status code equal to that given
func (o *AddOrUpdateNodePoolConfigItemBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add or update node pool config item bad request response
func (o *AddOrUpdateNodePoolConfigItemBadRequest) Code() int {
	return 400
}

func (o *AddOrUpdateNodePoolConfigItemBadRequest) Error() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemBadRequest  %+v", 400, o.Payload)
}

func (o *AddOrUpdateNodePoolConfigItemBadRequest) String() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemBadRequest  %+v", 400, o.Payload)
}

func (o *AddOrUpdateNodePoolConfigItemBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrUpdateNodePoolConfigItemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOrUpdateNodePoolConfigItemUnauthorized creates a AddOrUpdateNodePoolConfigItemUnauthorized with default headers values
func NewAddOrUpdateNodePoolConfigItemUnauthorized() *AddOrUpdateNodePoolConfigItemUnauthorized {
	return &AddOrUpdateNodePoolConfigItemUnauthorized{}
}

/*
AddOrUpdateNodePoolConfigItemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddOrUpdateNodePoolConfigItemUnauthorized struct {
}

// IsSuccess returns true when this add or update node pool config item unauthorized response has a 2xx status code
func (o *AddOrUpdateNodePoolConfigItemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add or update node pool config item unauthorized response has a 3xx status code
func (o *AddOrUpdateNodePoolConfigItemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add or update node pool config item unauthorized response has a 4xx status code
func (o *AddOrUpdateNodePoolConfigItemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add or update node pool config item unauthorized response has a 5xx status code
func (o *AddOrUpdateNodePoolConfigItemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add or update node pool config item unauthorized response a status code equal to that given
func (o *AddOrUpdateNodePoolConfigItemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add or update node pool config item unauthorized response
func (o *AddOrUpdateNodePoolConfigItemUnauthorized) Code() int {
	return 401
}

func (o *AddOrUpdateNodePoolConfigItemUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemUnauthorized ", 401)
}

func (o *AddOrUpdateNodePoolConfigItemUnauthorized) String() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemUnauthorized ", 401)
}

func (o *AddOrUpdateNodePoolConfigItemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOrUpdateNodePoolConfigItemForbidden creates a AddOrUpdateNodePoolConfigItemForbidden with default headers values
func NewAddOrUpdateNodePoolConfigItemForbidden() *AddOrUpdateNodePoolConfigItemForbidden {
	return &AddOrUpdateNodePoolConfigItemForbidden{}
}

/*
AddOrUpdateNodePoolConfigItemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddOrUpdateNodePoolConfigItemForbidden struct {
}

// IsSuccess returns true when this add or update node pool config item forbidden response has a 2xx status code
func (o *AddOrUpdateNodePoolConfigItemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add or update node pool config item forbidden response has a 3xx status code
func (o *AddOrUpdateNodePoolConfigItemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add or update node pool config item forbidden response has a 4xx status code
func (o *AddOrUpdateNodePoolConfigItemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add or update node pool config item forbidden response has a 5xx status code
func (o *AddOrUpdateNodePoolConfigItemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add or update node pool config item forbidden response a status code equal to that given
func (o *AddOrUpdateNodePoolConfigItemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add or update node pool config item forbidden response
func (o *AddOrUpdateNodePoolConfigItemForbidden) Code() int {
	return 403
}

func (o *AddOrUpdateNodePoolConfigItemForbidden) Error() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemForbidden ", 403)
}

func (o *AddOrUpdateNodePoolConfigItemForbidden) String() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemForbidden ", 403)
}

func (o *AddOrUpdateNodePoolConfigItemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOrUpdateNodePoolConfigItemInternalServerError creates a AddOrUpdateNodePoolConfigItemInternalServerError with default headers values
func NewAddOrUpdateNodePoolConfigItemInternalServerError() *AddOrUpdateNodePoolConfigItemInternalServerError {
	return &AddOrUpdateNodePoolConfigItemInternalServerError{}
}

/*
AddOrUpdateNodePoolConfigItemInternalServerError describes a response with status code 500, with default header values.

Unexpected error
*/
type AddOrUpdateNodePoolConfigItemInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add or update node pool config item internal server error response has a 2xx status code
func (o *AddOrUpdateNodePoolConfigItemInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add or update node pool config item internal server error response has a 3xx status code
func (o *AddOrUpdateNodePoolConfigItemInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add or update node pool config item internal server error response has a 4xx status code
func (o *AddOrUpdateNodePoolConfigItemInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add or update node pool config item internal server error response has a 5xx status code
func (o *AddOrUpdateNodePoolConfigItemInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add or update node pool config item internal server error response a status code equal to that given
func (o *AddOrUpdateNodePoolConfigItemInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add or update node pool config item internal server error response
func (o *AddOrUpdateNodePoolConfigItemInternalServerError) Code() int {
	return 500
}

func (o *AddOrUpdateNodePoolConfigItemInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOrUpdateNodePoolConfigItemInternalServerError) String() string {
	return fmt.Sprintf("[PUT /kubernetes-clusters/{cluster_id}/node-pools/{node_pool_name}/config-items/{config_key}][%d] addOrUpdateNodePoolConfigItemInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOrUpdateNodePoolConfigItemInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrUpdateNodePoolConfigItemInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
